#+STARTUP: logreschedule logdone logrepeat logrefile logredeadline 
#+PROPERTY: logdrawer
#+PROPERTY: xob t 

* Mauris ac felis vel velit tristique imperdiet.   
:LOGBOOK:
- Note taken on [2021-01-08 Fri 07:34] \\
  someting
CLOCK: [2021-01-08 Fri 07:33]--[2021-01-08 Fri 07:33] =>  0:00
- State "[C]"        from "[X]"        [2021-01-08 Fri 07:14]
- State "[X]"        from "[?]"        [2021-01-08 Fri 07:14]
- State "[-]"        from "[.]"        [2021-01-08 Fri 07:14]
- State "[.]"        from              [2021-01-08 Fri 07:14]
- State "[C]"        from "[X]"        [2021-01-08 Fri 07:12]
- State "[X]"        from "[?]"        [2021-01-08 Fri 07:12]
- State "[-]"        from "[.]"        [2021-01-08 Fri 07:12]
- State "[.]"        from              [2021-01-08 Fri 07:12]
- State "[C]"        from "[X]"        [2021-01-08 Fri 07:11]
- State "[X]"        from "[?]"        [2021-01-08 Fri 07:11]
- State "[?]"        from "[-]"        [2021-01-08 Fri 07:11]
- State "[-]"        from "[.]"        [2021-01-08 Fri 07:11]
- State "[C]"        from "[X]"        [2021-01-08 Fri 07:11]
- State "[X]"        from "[?]"        [2021-01-08 Fri 07:11]
- State "[?]"        from "[-]"        [2021-01-08 Fri 07:11]
- State "[-]"        from "[.]"        [2021-01-08 Fri 07:11]
- State "[C]"        from "[X]"        [2021-01-08 Fri 07:11]
- State "[X]"        from "[?]"        [2021-01-08 Fri 07:11]
- State "[?]"        from "[-]"        [2021-01-08 Fri 07:11]
- State "[-]"        from "[.]"        [2021-01-08 Fri 07:11]
CLOCK: [2021-01-08 Fri 06:44]--[2021-01-08 Fri 06:44] =>  0:00
:END:
* Aliquam posuere.    
:LOGBOOK:
- Rescheduled from "[2021-01-13 Wed]" on [2021-01-13 Wed 03:39]
:END:
** Phasellus purus.
* more
** some
*** yes
:PROPERTIES:
:LABELS:   one cat
:END:
#+begin_src elisp :results silent
  (org-entry-put (point) "LABELS" "one two cat dog")
  (org-entry-put (point) "header-args" ":results silent")
#+end_src

#+begin_src elisp
  (list (split-string (org-entry-get (point) "LABELS")))
#+end_src

#+RESULTS:
| one | two | cat | dog |

#+begin_src elisp
(helm :buffer "mmb"
      :sources (helm-build-sync-source "mmb"
                 :candidates '(a b c d e f)
                 :action (lambda (c) (org-entry-put (point) "LABELS" (string-join (helm-marked-candidates) " ")))))
#+end_src

#+RESULTS:
*** df
:PROPERTIES:
:xob:      t
:M: em 
:END:

#+begin_src elisp
  (setq vv/s (car
              (org-ql-select (current-buffer)
                `(property "M" "em")
                :action #'(point-marker))))
#+end_src

#+RESULTS:
: #<marker at 2327 in org-test.org>

#+begin_src elisp
  (goto-char vv/s)
#+end_src

(equal "t" (org-entry-get (point) "xob"))
(org-entry-get (point) "xob")

[[https://twitter.com]]


#+begin_src elisp
(cdr (org-element-at-point))
#+end_src

(org-element-contents (org-element-at-point))

(org-element-context)

(org-element-at-point)
  (paragraph (:begin 2316 :end 2439 :contents-begin 2316 :contents-end 2438 :post-blank 1 :post-affiliated 2316 :parent nil))
